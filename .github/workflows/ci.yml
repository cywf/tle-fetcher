name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  python:
    name: Python • ${{ matrix.os }} • py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt

      - name: Ruff (lint)
        run: ruff check

      - name: Mypy (type check)
        run: mypy tle_fetcher.py

      - name: Pytest (unit tests)
        run: |
          python -c "import pathlib; pathlib.Path('reports').mkdir(parents=True, exist_ok=True)"
          python -m pytest --junitxml=reports/pytest.xml -q

      - name: Upload pytest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-${{ matrix.os }}-py${{ matrix.python-version }}
          path: reports/pytest.xml
          if-no-files-found: warn

  rust:
    name: Rust • ${{ matrix.os }}
    if: ${{ hashFiles('Cargo.toml') != '' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cargo fmt
        run: cargo fmt --all -- --check

      - name: Cargo check
        run: cargo check --all-targets

      - name: Cargo test
        run: cargo test

      - name: Upload cargo target
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cargo-target-${{ matrix.os }}
          path: target
          if-no-files-found: warn
